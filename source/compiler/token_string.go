// Code generated by "stringer -type=Token"; DO NOT EDIT.

package compiler

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[LIST_START-0]
	_ = x[LIST_END-1]
	_ = x[MAP_START-2]
	_ = x[MAP_END-3]
	_ = x[FUNCTION_START-4]
	_ = x[FUNCTION_END-5]
	_ = x[TYPE_PARAMETER_START-6]
	_ = x[TYPE_PARAMETER_END-7]
	_ = x[TYPE_ALIAS-8]
	_ = x[TYPE_IDENTITY-9]
	_ = x[CLAUSE_SEPARATOR-10]
	_ = x[LIST_SEPARATOR-11]
	_ = x[IDENTIFIER_SEPARATOR-12]
	_ = x[DEFINE-13]
	_ = x[MACRO_SYMBOL-14]
	_ = x[DISCARD_SYMBOL-15]
	_ = x[USE_KEYWORD-16]
	_ = x[INTEGER-17]
	_ = x[IDENTIFIER-18]
	_ = x[STRING-19]
	_ = x[UNKNOWN-20]
}

const _Token_name = "LIST_STARTLIST_ENDMAP_STARTMAP_ENDFUNCTION_STARTFUNCTION_ENDTYPE_PARAMETER_STARTTYPE_PARAMETER_ENDTYPE_ALIASTYPE_IDENTITYCLAUSE_SEPARATORLIST_SEPARATORIDENTIFIER_SEPARATORDEFINEMACRO_SYMBOLDISCARD_SYMBOLUSE_KEYWORDINTEGERIDENTIFIERSTRINGUNKNOWN"

var _Token_index = [...]uint8{0, 10, 18, 27, 34, 48, 60, 80, 98, 108, 121, 137, 151, 171, 177, 189, 203, 214, 221, 231, 237, 244}

func (i Token) String() string {
	if i < 0 || i >= Token(len(_Token_index)-1) {
		return "Token(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Token_name[_Token_index[i]:_Token_index[i+1]]
}
